{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/abrar-byte/Todo List/src/React Hook Form/Upload.js\";\nimport React, { Component } from 'react';\nexport default class Upload extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      image: localStorage[\"fileBase64\"] // local storage get item\n      || \"https://fakeimg.pl/350x200/\"\n    };\n\n    this.imageUpload = e => {\n      const file = e.target.files[0];\n      getBase64(file).then(base64 => {\n        localStorage[\"fileBase64\"] = base64; // local storage set item\n\n        console.debug(\"file stored\", base64);\n      }).then(() => this.setState({\n        image: localStorage[\"fileBase64\"]\n      }));\n    };\n  }\n\n  render() {\n    const {\n      image\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"imageFile\",\n        name: \"imageFile\",\n        onChange: this.imageUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        width: \"350\",\n        height: \"200\",\n        alt: \"embleh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nconst getBase64 = file => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n\n    reader.readAsDataURL(file);\n  });\n};","map":{"version":3,"sources":["/home/abrar-byte/Todo List/src/React Hook Form/Upload.js"],"names":["React","Component","Upload","state","image","localStorage","imageUpload","e","file","target","files","getBase64","then","base64","console","debug","setState","render","Promise","resolve","reject","reader","FileReader","onload","result","onerror","error","readAsDataURL"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC5CE,KAD4C,GACtC;AACJC,MAAAA,KAAK,EAAEC,YAAY,CAAC,YAAD,CAAZ,CACP;AADO,SAEJ;AAHC,KADsC;;AAAA,SAM5CC,WAN4C,GAM7BC,CAAD,IAAO;AACjB,YAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACAC,MAAAA,SAAS,CAACH,IAAD,CAAT,CAAgBI,IAAhB,CAAqBC,MAAM,IAAI;AAC7BR,QAAAA,YAAY,CAAC,YAAD,CAAZ,GAA6BQ,MAA7B,CAD6B,CAE7B;;AACAC,QAAAA,OAAO,CAACC,KAAR,CAAc,aAAd,EAA4BF,MAA5B;AACD,OAJD,EAIGD,IAJH,CAIQ,MAAK,KAAKI,QAAL,CAAc;AAACZ,QAAAA,KAAK,EAAEC,YAAY,CAAC,YAAD;AAApB,OAAd,CAJb;AAKH,KAb2C;AAAA;;AAe5CY,EAAAA,MAAM,GAAG;AAEP,UAAM;AAACb,MAAAA;AAAD,QAAU,KAAKD,KAArB;AAEA,wBACA;AAAA,8BACA;AACC,QAAA,IAAI,EAAC,MADN;AAEC,QAAA,EAAE,EAAC,WAFJ;AAGC,QAAA,IAAI,EAAC,WAHN;AAIC,QAAA,QAAQ,EAAE,KAAKG;AAJhB;AAAA;AAAA;AAAA;AAAA,cADA,eAOF;AAAK,QAAA,GAAG,EAAEF,KAAV;AAAiB,QAAA,KAAK,EAAC,KAAvB;AAA6B,QAAA,MAAM,EAAC,KAApC;AAA0C,QAAA,GAAG,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,cAPE;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAcD;;AAjC2C;;AAqC9C,MAAMO,SAAS,GAAIH,IAAD,IAAU;AAC1B,SAAO,IAAIU,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAoB;AACpC,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,MAAMJ,OAAO,CAACE,MAAM,CAACG,MAAR,CAA7B;;AACAH,IAAAA,MAAM,CAACI,OAAP,GAAiBC,KAAK,IAAIN,MAAM,CAACM,KAAD,CAAhC;;AACAL,IAAAA,MAAM,CAACM,aAAP,CAAqBnB,IAArB;AACF,GALM,CAAP;AAMD,CAPD","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Upload extends Component {\n  state={\n    image: localStorage[\"fileBase64\"] \n    // local storage get item\n    || \"https://fakeimg.pl/350x200/\"\n  }\n  imageUpload = (e) => {\n      const file = e.target.files[0];\n      getBase64(file).then(base64 => {\n        localStorage[\"fileBase64\"] = base64;\n        // local storage set item\n        console.debug(\"file stored\",base64);\n      }).then(()=> this.setState({image: localStorage[\"fileBase64\"]}));\n  };\n\n  render() {\n\n    const {image} = this.state\n\n    return (\n    <div>\n    <input \n     type=\"file\" \n     id=\"imageFile\" \n     name='imageFile' \n     onChange={this.imageUpload} />\n     \n  <img src={image} width=\"350\" height=\"200\" alt=\"embleh\"/>\n     \n     </div>\n     \n     )\n\n  }\n}\n\n\nconst getBase64 = (file) => {\n  return new Promise((resolve,reject) => {\n     const reader = new FileReader();\n     reader.onload = () => resolve(reader.result);\n     reader.onerror = error => reject(error);\n     reader.readAsDataURL(file);\n  });\n}"]},"metadata":{},"sourceType":"module"}