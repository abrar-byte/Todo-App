[{"/Users/cupz/www/test/Todo-App/src/index.js":"1","/Users/cupz/www/test/Todo-App/src/App.js":"2","/Users/cupz/www/test/Todo-App/src/Falcon.js":"3","/Users/cupz/www/test/Todo-App/src/newTodo.js":"4","/Users/cupz/www/test/Todo-App/src/reportWebVitals.js":"5","/Users/cupz/www/test/Todo-App/src/Todos.js":"6"},{"size":652,"mtime":1642576732287,"results":"7","hashOfConfig":"8"},{"size":4891,"mtime":1642576732285,"results":"9","hashOfConfig":"8"},{"size":8856,"mtime":1642579583086,"results":"10","hashOfConfig":"8"},{"size":2181,"mtime":1642576732287,"results":"11","hashOfConfig":"8"},{"size":362,"mtime":1642576732287,"results":"12","hashOfConfig":"8"},{"size":6497,"mtime":1642576732286,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"nsvx7x",{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"17"},"/Users/cupz/www/test/Todo-App/src/index.js",["30","31","32"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Falcon from './Falcon';\nimport './index.css';\nimport Todos from './newTodo';\n// import Map from './Map'\nimport reportWebVitals from './reportWebVitals';\n// import Rapot from './Rapot';\nimport Todo from './Todos';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Falcon />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();",["33","34"],"/Users/cupz/www/test/Todo-App/src/App.js",["35","36"],"import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default function App() {\n  const { register, handleSubmit, reset } = useForm();\n  const [todos, setTodos] = useState([]);\n  const [done, setDone] = useState([]);\n  const [editTodo, setEditTodo] = useState(null);\n  const [group, setGroup] = useState([]);\n\n  // const clr = editTodo && 'focus:ring-2 focus:ring-blue-600'   \n  \n\n  const updateTodo = (todo, id) => {\n    const newTodo = todos.map((tod) => (tod.id === id ? todo : tod));\n    newTodo.id = id;\n    setTodos(newTodo);\n    setEditTodo(\"\");\n  };\n\n  const onSubmit = (values) => {\n    if (!editTodo) {\n      const dataBaru = JSON.parse(JSON.stringify(todos));\n      const obj = values;\n      obj.id = uuidv4();\n      dataBaru.push(obj);\n      setTodos(dataBaru);\n      console.log(dataBaru);\n      reset();\n    } else {\n      updateTodo(values, editTodo.id);\n      reset()\n    }\n  };\n\n  const move = (values, i, x) => {\n    if(x === 4 - 0){\n    const dataBaru = JSON.parse(JSON.stringify(done));\n    dataBaru.push(values);\n    setDone(dataBaru);\n    todos.splice(i, 1);}else{  const dataBaru = JSON.parse(JSON.stringify(todos));\n      dataBaru.push(values);\n      setTodos(dataBaru);\n      done.splice(i, 1);\n\n    }\n  };\n  const deleteInput = async (i,x) => {\n    if(x === \"as simple as that\"){\n    const data = JSON.parse(JSON.stringify(todos));\n    await data.splice(i, 1);\n    setTodos(data);\n    } else {\n      const data = JSON.parse(JSON.stringify(done));\n      data.splice(i, 1);\n      setDone(data);\n    }\n  };\n \n  \n  const handleEdit = ({ id }) => {\n    const findTodo = todos.find((todo) => todo.id === id);\n    setEditTodo(findTodo);\n    alert(\"Edit di input yang tersedia üî™Ô∏è \");\n   \n\n  };\n  \n\n  return (\n    <div className=\"bg-gradient-to-r from-yellow-400 via-red-500 to-pink-500 h-screen\">\n    <div className=\"container mx-auto px-6 h-96 max-w-4xl bg-red-300\t overflow-y-auto\">\n      <h1 className=\" font-extrabold text-4xl uppercase text-center mb-5 text-zinc-900 \">\n        TODO LIST\n      </h1>\n      <div className=\"grid grid-cols-2 \">\n        <div className=\" text-center font-bold  \">\n          <h2 className=\"uppercase mb-5\">Todo List</h2>\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <label className=\"font-bold uppercase  mb-7\">\n              Tambah{\" \"}\n            </label>\n            <br />\n            <input\n              autoFocus\n              required\n              type=\"text\"\n              placeholder=\"write as you like\n              ! üòâÔ∏è\"\n              {...register(\"title\")}\n              // className={`${clr} border border-black box-border  rounded  mb-5 mr-2 px-1`}\n              className=\"border border-black box-border  rounded  mb-5 mr-2 px-1\" \n            />\n            <button\n              type=\"submit\"\n              className=\"w-auto px-5 rounded-lg bg-green-500 \"\n            >\n              Submit\n            </button>\n          </form>\n\n          {todos.map((item, i) => {\n            console.log(item, \"mapping\");\n            return (\n              <div\n                key={i}\n                className=\"flex border border-black box-border mb-5 mx-2\"\n              >\n                <h1 className=\"flex-grow\">{item.title}</h1>\n                <button\n                  onClick={() => move(item, i,4-0)}\n                  className=\" rounded-md bg-green-500 mr-2 text-xs px-1\"\n                >\n                  ‚úîÔ∏è\n                </button>\n\n                <button\n                  onClick={() => handleEdit(item)}\n                  className=\"rounded-md bg-yellow-200\t mr-2 text-xs px-1\"\n                >\n                  ‚úèÔ∏è\n                </button>\n                <button\n                  onClick={() => deleteInput(i,\"as simple as that\")}\n                  className=\"rounded-md bg-gray-500\t  text-xs px-1 \"\n                >\n                  ‚ùåÔ∏è\n                </button>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"text-center font-bold  \">\n          <h2 className=\"uppercase mb-5\">Done</h2>\n\n          {done.map((item, i) => (\n            <div\n              key={i}\n              className=\"flex border border-black box-border mx-2 mb-5\"\n            >\n              <h1 className=\"flex-grow\">{item.title}</h1>\n              <button\n                onClick={() => move(item, i, 5-0)}\n                className=\"rounded-md bg-green-500 mr-2 text-xs px-1\"\n              >\n                ‚¨ÖÔ∏è\n              </button>\n              <button\n                onClick={() => deleteInput(i,\"halo ges david di sini\")}\n                className=\"rounded-md bg-gray-500\t  text-xs px-1\"\n              >\n                {\" \"}\n                ‚ùåÔ∏è\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n    </div>\n  );\n}\n","/Users/cupz/www/test/Todo-App/src/Falcon.js",["37","38"],"/Users/cupz/www/test/Todo-App/src/newTodo.js",[],"/Users/cupz/www/test/Todo-App/src/reportWebVitals.js",[],"/Users/cupz/www/test/Todo-App/src/Todos.js",["39","40","41","42"],"import { useEffect, useState } from \"react\";\nimport { HiPlus } from \"react-icons/hi\";\nimport { MdDelete, MdSaveAlt } from \"react-icons/md\";\n\nimport axios from \"axios\";\nimport { IoMdArrowRoundForward, IoMdArrowRoundBack } from \"react-icons/io\";\n\nconst API_URL = \"http://localhost:4000\";\nfunction Todo() {\n  const [todo, setTodo] = useState([{ label: \"minum kopi\", status: \"draft\" }]);\n  const [edit, setEdit] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [group, setGroup] = useState([]);\n\n  const getDataGroups = async () => {\n    axios\n      .get(`${API_URL}/groups`)\n      .then((r) => setGroup(r.data))\n      .catch((e) => console.log(e));\n  };\n\n  const getDataPosts = async () => {\n    axios\n      .get(`${API_URL}/posts`)\n      .then((r) => setTodo(r.data))\n      .catch((e) => console.log(e));\n  };\n  useEffect(() => {\n\n    getDataPosts();\n    getDataGroups();\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const label = e.target.label.value;\n\n    const payload = { label, group: \"draft\" };\n    axios\n      .post(`${API_URL}/posts`, payload, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then(() => {\n        getDataPosts();\n      });\n    e.target.label.value = \"\";\n  };\n\n  \n  const handleOnChange = (e, i) => {\n    const newTodo = [...todo];\n    newTodo[i].label = e.target.value;\n    setEdit(newTodo[i].label);\n    // const id = newTodo[i].id;\n   \n  };\n  // console.log(edit,\"coba\");\n\n  const handleEdit = (x, i) => {\n   \n    if (edit) {\n      const payload = { label: edit };\n\n      axios.patch(`${API_URL}/posts/${x.id}`, payload).then(() => {\n        getDataPosts();\n      });\n      setEdit(\"\");\n    }\n  };\n\n  const onDelete = (e, i) => {\n    const newTodo = [...todo];\n    const id = newTodo[i].id;\n    // const payload ={status : \"done\"};\n    axios.delete(`${API_URL}/posts/${id}`).then(() => {\n      getDataPosts();\n    });\n  };\n\n  const onDropTodo = (e) => {\n    let value = JSON.parse(e.dataTransfer.getDataPosts(\"done\"));\n    const newTodo = [...todo];\n    const id = newTodo[value.index].id;\n    const payload = { status: \"draft\", time: Date.now() };\n\n    axios.patch(`${API_URL}/posts/${id}`, payload).then(() => {\n      getDataPosts();\n    });\n\n    console.log(newTodo[value.index].status, \"newTodo[value.index]\");\n  };\n\n  const onDragTodo = (e, x, i) => {\n    e.dataTransfer.setData(\"draft\", JSON.stringify({ ...x, index: i }));\n  };\n\n  const onDropDone = (e) => {\n    let value = JSON.parse(e.dataTransfer.getDataPosts(\"draft\"));\n    const newTodo = [...todo];\n    const id = newTodo[value.index].id;\n    const payload = { status: \"done\", time: Date.now() };\n    axios.patch(`${API_URL}/posts/${id}`, payload).then(() => {\n      getDataPosts();\n    });\n  };\n\n  const onDragDone = (e, x, i) => {\n    e.dataTransfer.setData(\"done\", JSON.stringify({ ...x, index: i }));\n  };\n\n  const handleMove = (e, i) => {\n    const newTodo = [...todo];\n    const id = newTodo[i].id;\n    const payload = { group: e.target.innerText, time: Date.now() };\n    console.log(id, \"idMove\");\n    console.log(payload, \"payload\");\n\n    axios.patch(`${API_URL}/posts/${id}`, payload).then(() => {\n      getDataPosts();\n    });\n  };\n  const handleGroupMoving = async (e, position) => {\n    setLoading(true)\n\n    const payload = { group: e.target.innerText, time: Date.now() };\n    await todo.map(\n      async (v) =>\n      await v.group === position &&\n        (await axios.patch(`${API_URL}/posts/${v.id}`, payload))\n    );\n    await getDataPosts();\n    setLoading(false)\n\n\n  };  \n\n  \n\n  return (\n    <>\n   {loading? <div className=\"text-2xl \">LOADING</div> :  <div>\n      <h1 className=\"text-center font-extrabold text-4xl text-teal-500\t\t\t\">\n        FAKE TRELLO\n      </h1>\n      <div className=\"flex\">\n        {group.map((item1, i1) => (\n          <div\n            className=\"p-10 mx-auto w-full\"\n            onDrop={(e) => onDropTodo(e)}\n            onDragOver={(e) => e.preventDefault()}\n          >\n            <div className=\"text-xl text-gray-500\">{item1.name}</div>\n            {group.map((itemx, ix) => (\n              <button onClick={(e)=> handleGroupMoving(e, item1.name)} className=\"mx-3\">\n                {itemx.name}\n              </button>\n            ))}\n            <form className=\"space-y-5 m-5 w-full\" onSubmit={handleSubmit}>\n              {todo\n                .sort((a, b) =>\n                  a.time > b.time ? 1 : b.time > a.time ? -1 : 0\n                )\n                .map((item2, i2) => {\n                  return item2.group === item1.name ? (\n                    <div\n                      key={i2}\n                      draggable\n                      onDragStart={(e) => onDragTodo(e, item2, i2)}\n                      className=\"flex items-center space-x-3 border border-gray-300 px-4 py-2 rounded\"\n                    >\n                   \n                      {group.map((item3, i3) => (\n                        <button onClick={(e) => handleMove(e, i2)}>\n                          {item3.name}\n                        </button>\n                      ))}                    \n                      <input\n                        type=\"text\"\n                        onChange={(e) => handleOnChange(e, i2)}\n                        value={item2.label}\n                        className=\"w-full \"\n                      />\n                      <MdSaveAlt\n                        onClick={() => handleEdit(item2, i2)}\n                        className=\"hover:text-red-700\"\n                        role=\"button\"\n                      />\n                      <MdDelete\n                        onClick={(e) => onDelete(e, i2)}\n                        className=\"hover:text-red-700\"\n                        role=\"button\"\n                      />\n                    </div>\n                  ) : null;\n                })}\n\n              <div className=\"flex items-center space-x-3 border border-gray-300 px-4 py-2 rounded\">\n                <HiPlus />\n                <input\n                  required\n                  autoComplete=\"off\"\n                  name=\"label\"\n                  type=\"text\"\n                  className=\"w-full outline-0\"\n                  placeholder=\"Write as You Like üî™Ô∏è\"\n                />\n                <button type=\"submit\" className=\"hover:text-red-700\">\n                  Save\n                </button>\n              </div>\n            </form>\n          </div>\n        ))}\n      </div>\n    </div>}\n    </>\n  );\n}\n\nexport default Todo;\n",{"ruleId":"43","severity":1,"message":"44","line":3,"column":8,"nodeType":"45","messageId":"46","endLine":3,"endColumn":11},{"ruleId":"43","severity":1,"message":"47","line":6,"column":8,"nodeType":"45","messageId":"46","endLine":6,"endColumn":13},{"ruleId":"43","severity":1,"message":"48","line":10,"column":8,"nodeType":"45","messageId":"46","endLine":10,"endColumn":12},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"43","severity":1,"message":"53","line":10,"column":10,"nodeType":"45","messageId":"46","endLine":10,"endColumn":15},{"ruleId":"43","severity":1,"message":"54","line":10,"column":17,"nodeType":"45","messageId":"46","endLine":10,"endColumn":25},{"ruleId":"43","severity":1,"message":"55","line":6,"column":33,"nodeType":"45","messageId":"46","endLine":6,"endColumn":51},{"ruleId":"43","severity":1,"message":"56","line":37,"column":9,"nodeType":"45","messageId":"46","endLine":37,"endColumn":13},{"ruleId":"43","severity":1,"message":"57","line":6,"column":10,"nodeType":"45","messageId":"46","endLine":6,"endColumn":31},{"ruleId":"43","severity":1,"message":"55","line":6,"column":33,"nodeType":"45","messageId":"46","endLine":6,"endColumn":51},{"ruleId":"43","severity":1,"message":"58","line":99,"column":9,"nodeType":"45","messageId":"46","endLine":99,"endColumn":19},{"ruleId":"43","severity":1,"message":"59","line":109,"column":9,"nodeType":"45","messageId":"46","endLine":109,"endColumn":19},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Todos' is defined but never used.","'Todo' is defined but never used.","no-native-reassign",["60"],"no-negated-in-lhs",["61"],"'group' is assigned a value but never used.","'setGroup' is assigned a value but never used.","'IoMdArrowRoundBack' is defined but never used.","'coba' is assigned a value but never used.","'IoMdArrowRoundForward' is defined but never used.","'onDropDone' is assigned a value but never used.","'onDragDone' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]